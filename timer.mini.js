/*!
 * timer.js v1.0
 * https://github.com/ionepub/js-timer
 *
 * Licensed MIT Â© ionepub
 */
(function(owner){var defaultSettings={time:60,format:'string',withHour:true,withDay:true};var _mergeObject=function(obj,obj2){if(typeof Object.assign==='function'){return Object.assign({},obj,obj2)}else{return _mergeObjectES5(obj,obj2)}};var _mergeObjectES5=function(obj,obj2){var target={};for(var tmp in obj){target[tmp]=obj[tmp]}for(var tmp in obj2){target[tmp]=obj2[tmp]}return target};var _parseSettings=function(settings){if(typeof settings!=='object'){return defaultSettings}for(var key in settings){if(settings.hasOwnProperty(key)&&!defaultSettings.hasOwnProperty(key)){delete settings[key];continue}if(key==='time'){if(typeof settings[key]!=='number'||settings[key]!==parseInt(settings[key])){delete settings[key];continue}}}return settings};var _run=function(time,settings,callback){var day=0,hour=0,minute=0,second=0;var t=setTimeout(function(){time--;if(time<=0){clearTimeout(t);if(settings.format==='string'){day=hour=minute=second='00'}else{day=hour=minute=second=0}typeof callback==='function'&&callback(day,hour,minute,second,true)}else{_run(time,settings,callback)}},1000);var tmp=_calcTime(time,settings);day=tmp[0];hour=tmp[1];minute=tmp[2];second=tmp[3];typeof callback==='function'&&callback(day,hour,minute,second,false)};var _calcTime=function(time,settings){var day=0,hour=0,minute=0,second=0;if(settings.withDay){day=Math.floor(time/(60*60*24))}if(settings.withHour){hour=Math.floor(time/(60*60))-(day*24)}minute=Math.floor(time/60)-(day*24*60)-(hour*60);second=Math.floor(time)-(day*24*60*60)-(hour*60*60)-(minute*60);if(settings.format==='string'){if(hour<=9)(hour='0'+hour);if(minute<=9)(minute='0'+minute);if(second<=9)(second='0'+second);day=day+"";hour=hour+"";minute=minute+"";second=second+""}return[day,hour,minute,second]};owner.settings={};owner.init=function(settings){if(typeof settings==='undefined'){settings=defaultSettings}else{settings=_parseSettings(settings)}if(typeof settings==='object'){owner.settings=_mergeObject(defaultSettings,settings);}return owner};owner.run=function(settings,callback){if(typeof settings==='function'){callback=settings;settings=''}if(typeof owner.settings.time==='undefined'||typeof settings==='object'){owner.init(settings)}_run(owner.settings.time,owner.settings,callback);return owner};owner.diff=function(startTime,endTime){if(typeof startTime==='number'&&startTime===parseInt(startTime)&&typeof endTime==='number'&&endTime===parseInt(endTime)&&startTime<endTime){owner.settings.time=endTime-startTime}return owner}})(window.Timer={});
